{{- $iprange := .Values.global.includeIPRanges }}
{{- range .Values.coreServices }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name:  {{ .serviceName }}-deploy
  namespace: gameon-system
  labels:
    app: {{ $.Chart.Name }}-{{ .serviceName }}
    {{- include "gameon-system.labels" $ }}
spec:
  template:
    metadata:
{{- if eq .serviceName "mediator" }}
      annotations:
        traffic.sidecar.istio.io/includeOutboundIPRanges: {{ $iprange }}
{{- end }}
      labels:
        app: {{ $.Chart.Name }}-{{ .serviceName }}
    spec:
      volumes:
        - name: certificate
          secret:
            secretName: global-cert
      containers:
        - image: {{ .image }}
{{- if .imagePullPolicy }}
          imagePullPolicy:  {{ .imagePullPolicy }}
{{- end }}
          name: {{ .serviceName }}
          ports:
            - containerPort: {{ .servicePort }}
              name: {{ .serviceName }}
{{- if .readinessProbe }}
          readinessProbe:
            httpGet:
              path: {{ .readinessProbe.path }}
              port: {{ .servicePort }}
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
{{- end }}
          volumeMounts:
            - name: certificate
              mountPath: /etc/cert
          envFrom:
            - secretRef:
                name: gameon-system-global-secret
            - configMapRef:
                name: gameon-system-global-config
          {{- if .configMapRef }}
          {{- range .configMapRef }}
            - configMapRef:
                name: {{ . }}
          {{- end }}
          {{- end }}
---
{{- end }}
