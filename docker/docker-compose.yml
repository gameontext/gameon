# Copyright 2016 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##Game on Services..

version: '2.1'

##
# For gameontext images:
#  * use :lastgood for most recent set of services that have been tested together
#  * Use :latest for the bleeding edge

services:

  auth:
    image: gameontext/gameon-auth:lastgood
    volumes:
      - 'keystore:/etc/certs'
    depends_on:
      kafka:
        condition: service_healthy
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: auth
    networks:
      - gameontext

  map:
    image: gameontext/gameon-map:lastgood
    volumes:
      - 'keystore:/opt/ol/wlp/usr/servers/defaultServer/resources/security'
    depends_on:
      couchdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: map
    networks:
      - gameontext

  mediator:
    image: gameontext/gameon-mediator:lastgood
    volumes:
      - 'keystore:/opt/ol/wlp/usr/servers/defaultServer/resources/security'
    depends_on:
      kafka:
        condition: service_healthy
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: mediator
    networks:
      - gameontext

  player:
    image: gameontext/gameon-player:lastgood
    volumes:
      - 'keystore:/opt/ol/wlp/usr/servers/defaultServer/resources/security'
    depends_on:
      couchdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: player
    networks:
      - gameontext

  proxy:
    image: gameontext/gameon-proxy:lastgood
    volumes:
      - 'keystore:/etc/cert'
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    environment:
      - DNS_TCP_ADDR=127.0.0.11
      - DNS_TCP_PORT=53
    depends_on:
      - auth
      - mediator
      - map
      - player
      - room
    ports:
      - "80:8080"
      - "443:8443"
    container_name: proxy
    networks:
      - gameontext

  room:
    image: gameontext/gameon-room:lastgood
    volumes:
      - 'keystore:/opt/ol/wlp/usr/servers/defaultServer/resources/security'
    depends_on:
      kafka:
        condition: service_healthy
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: room
    networks:
      - gameontext

  swagger:
    image: gameontext/gameon-swagger:lastgood
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: swagger
    networks:
      - gameontext

  webapp:
    image: gameontext/gameon-webapp:lastgood
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: webapp
    networks:
      - gameontext

### Utility image: has tools, network, env. Holds onto volumes ###
  util:
    build:
      context: ../images/util
    image: gameon-util
    depends_on:
      couchdb:
        condition: service_healthy
    volumes:
      - 'keystore:/keystore'
      - 'couchdb-data:/opt/couchdb/data'
    env_file: gameon.${DOCKER_MACHINE_NAME}env
    container_name: util
    networks:
      - gameontext

#### Local Kafka Backend #########
  kafka:
    image: gameontext/go-reactive-sandbox:latest
    ports:
      - "9092:9092"
      - "2181:2181"
    container_name: kafka
    healthcheck:
      test: /test.sh
      timeout: 10s
      retries: 3
    networks:
      - gameontext

#### Local Redis Backend #########
  redis:
    image: redis:alpine
    ports:
      - "31400:6379"
    container_name: redis
    healthcheck:
      test: redis-cli ping | grep PONG
      timeout: 10s
      retries: 3
    networks:
      - gameontext

#### Local CouchDb Backend #########
  couchdb:
    image: couchdb:2.3.1
    volumes:
      - 'keystore:/etc/cert'
      - 'couchdb-data:/opt/couchdb/data'
    container_name: couchdb
    healthcheck:
      test: curl http://localhost:5984/
      timeout: 10s
      retries: 3
    networks:
      - gameontext

networks:
  gameontext:

volumes:
  keystore:
    external: true
  couchdb-data:
    external: true
